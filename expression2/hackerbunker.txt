@name HackerBunker byShelest
@persist [O EgpA EgpB EgpC E]:entity Door PosDoor PosDoor1 Light Zanoves [C1 C2 C3]:vector [Egp1 Egp2 Egp3]:wirelink

interval(100)

if(first()){
    noDuplications()
    
    E = entity()
    O = owner()
    E:setAlpha(50)

    C1 = vec(30)
    C2 = vec(150)
    C3 = vec(17, 198, 144)

    Door = 1

    holoCreate(1, E:toWorld(vec(0, 0, 0)), vec(1), E:toWorld(ang(0)), C1, "models/hunter/plates/plate4x6.mdl")
    holoMaterial(1, "hlmv/floor")
    holoCreate(2, E:toWorld(vec(0, -140.7, 49)), vec(1), E:toWorld(ang(0, 0, 90)), C1, "models/hunter/plates/platehole2x2.mdl")
    holoCreate(4, E:toWorld(vec(71, -140.7, 25.2)), vec(1), E:toWorld(ang(0, 0, 90)), C1, "models/hunter/plates/plate1x1.mdl")
    holoCreate(5, E:toWorld(vec(-71, -140.7, 25.2)), vec(1), E:toWorld(ang(0, 0, 90)), C1, "models/hunter/plates/plate1x1.mdl")
    holoCreate(6, E:toWorld(vec(0, 140.7, 25.2)), vec(1), E:toWorld(ang(90, 90, 0)), C1, "models/hunter/plates/plate1x4.mdl")
    holoCreate(7, E:toWorld(vec(93, 0, 25.2)), vec(1), E:toWorld(ang(90, 0, 0)), C1, "models/hunter/plates/plate1x6.mdl")
    holoCreate(8, E:toWorld(vec(-93, 0, 25.2)), vec(1), E:toWorld(ang(90, 0, 0)), C1, "models/hunter/plates/plate1x6.mdl")
    holoCreate(9, E:toWorld(vec(0, 0, 100)), vec(1), E:toWorld(ang(0, 0, 0)), C1, "models/hunter/blocks/cube4x6x025.mdl")
    holoCreate(10, E:toWorld(vec(71, -140.7, 24.2 * 3)), vec(1), E:toWorld(ang(0, 0, 90)), C3, "models/hunter/plates/plate1x1.mdl")
    holoCreate(11, E:toWorld(vec(-71, -140.7, 24.2 * 3)), vec(1), E:toWorld(ang(0, 0, 90)), C3, "models/hunter/plates/plate1x1.mdl")
    holoCreate(12, E:toWorld(vec(0, 140.7, 24.2 * 3)), vec(1), E:toWorld(ang(90, 90, 0)), C3, "models/hunter/plates/plate1x4.mdl")
    holoCreate(13, E:toWorld(vec(93, 0, 24.2 * 3)), vec(1), E:toWorld(ang(90, 0, 0)), C3, "models/hunter/plates/plate1x6.mdl")
    holoCreate(14, E:toWorld(vec(-93, 0, 24.2 * 3)), vec(1), E:toWorld(ang(90, 0, 0)), C3, "models/hunter/plates/plate1x6.mdl")
    holoCreate(15, E:toWorld(vec(0, -140.7, 49)), vec(1), E:toWorld(ang(0, 0, 90)), C1, "models/hunter/tubes/circle2x2.mdl")
    holoCreate(16, E:toWorld(vec(-70, -140, 49)), vec(1), E:toWorld(ang(0, 0, 90)), C2, "models/hunter/plates/plate05x05.mdl")
    holoCreate(17, E:toWorld(vec(-70 - 5, -139, 49 + 5)), vec(1), E:toWorld(ang(0, 0, 0)), vec(0, 100, 0), "models/hunter/plates/plate.mdl")
    holoCreate(18, E:toWorld(vec(-70 - 5, -139, 49 - 5)), vec(1), E:toWorld(ang(0, 0, 0)), vec(0, 100, 0), "models/hunter/plates/plate.mdl")
    holoCreate(19, E:toWorld(vec(-70 + 5, -139, 49 + 5)), vec(1), E:toWorld(ang(0, 0, 0)), vec(0, 100, 0), "models/hunter/plates/plate.mdl")
    holoCreate(20, E:toWorld(vec(-70 + 5, -139, 49 - 5)), vec(1), E:toWorld(ang(0, 0, 0)), vec(0, 100, 0), "models/hunter/plates/plate.mdl")
    holoCreate(21, E:toWorld(vec(0, 118, 40)), vec(1, 0.98, 0.5), E:toWorld(ang(0, 90, 0)), C2, "models/hunter/plates/plate1x4.mdl")
    holoCreate(22, E:toWorld(vec(45, 47, 40)), vec(1, 1, 0.5), E:toWorld(ang(0, 180, 0)), C2, "models/hunter/plates/platehole1x1.mdl")
    holoCreate(23, E:toWorld(vec(-45, 47, 40)), vec(1, 1, 0.5), E:toWorld(ang(180, 180, 0)), C2, "models/hunter/plates/platehole1x1.mdl")
    holoCreate(24, E:toWorld(vec(0, 80, 2)), vec(0.7, 0.6, 0.5), E:toWorld(ang(0, 45, 0)), C2, "models/mechanics/solid_steel/type_a_3_4.mdl")
    holoCreate(25, E:toWorld(vec(0, 80, 2)), vec(0.7, 0.6, 0.5), E:toWorld(ang(0, -45, 0)), C2, "models/mechanics/solid_steel/type_a_3_4.mdl")
    holoCreate(26, E:toWorld(vec(0, 80, 10)), vec(0.9, 0.6, 0.6), E:toWorld(ang(90, 0, 0)), C2, "models/Mechanics/robotics/a1.mdl")
    holoCreate(27, E:toWorld(vec(0, 80, 21)), vec(1, 1.2, 0.5), E:toWorld(ang(0, 0, 0)), C2, "models/hunter/plates/plate05x05.mdl")
    holoCreate(28, E:toWorld(vec(0, 65, 36)), vec(1, 1.3, 0.5), E:toWorld(ang(0, 0, -80)), C2, "models/hunter/plates/plate05x05.mdl")
    holoCreate(29, E:toWorld(vec(80, 110, 60)), vec(1, 5, 1), E:toWorld(ang(0, 90, 0)), C2, "models/sprops/geometry/fhex_48.mdl")
    holoCreate(30, E:toWorld(vec(80, 95, 75)), vec(1, 1, 1), E:toWorld(ang(0, 0, -30)), C1, "models/sprops/geometry/fhex_12.mdl")
    holoCreate(31, E:toWorld(vec(0, 0, 93)), vec(0.5, 0.5, 1), E:toWorld(ang(0, 0, 0)), C3, "models/hunter/geometric/hex1x1.mdl")
    holoCreate(32, E:toWorld(vec(0, 0, 93.3)), vec(0.6, 0.6, 1), E:toWorld(ang(0, 0, 0)), C2, "models/hunter/geometric/hex1x1.mdl")
    holoCreate(33, E:toWorld(vec(0, 120.5, 93)), vec(0.3, 0.3, 1), E:toWorld(ang(0, 0, 0)), C3, "models/hunter/geometric/hex1x1.mdl")
    holoCreate(34, E:toWorld(vec(0, 120.5, 93.3)), vec(0.4, 0.4, 1), E:toWorld(ang(0, 0, 0)), C2, "models/hunter/geometric/hex1x1.mdl")
    holoCreate(35, E:toWorld(vec(46.5, 110, 93)), vec(0.3, 0.3, 1), E:toWorld(ang(0, 0, 0)), C3, "models/hunter/geometric/hex1x1.mdl")
    holoCreate(36, E:toWorld(vec(46.5, 110, 93.3)), vec(0.4, 0.4, 1), E:toWorld(ang(0, 0, 0)), C2, "models/hunter/geometric/hex1x1.mdl")
    holoCreate(37, E:toWorld(vec(-46.5, 110, 93)), vec(0.3, 0.3, 1), E:toWorld(ang(0, 0, 0)), C3, "models/hunter/geometric/hex1x1.mdl")
    holoCreate(38, E:toWorld(vec(-46.5, 110, 93.3)), vec(0.4, 0.4, 1), E:toWorld(ang(0, 0, 0)), C2, "models/hunter/geometric/hex1x1.mdl")

    Egp1:egpBox(1, vec2(256, 256), vec2(256, 256))
    Egp1:egpMaterial(1, "hlmv/background")


    for(I = 2, 38){
        znbHoloSolid(I)
        holoMaterial(I, "models/shiny")
    }

    EgpA = znbSpawnEgp("models/sprops/rectangles/size_4/rect_36x48x3.mdl", E:toWorld(vec(0, 120.5, 60)), ang(0, 0, 90))
    EgpB = znbSpawnEgp("models/sprops/rectangles/size_4/rect_36x48x3.mdl", E:toWorld(vec(46.5, 110, 60)), ang(0, -25, 90))
    EgpC = znbSpawnEgp("models/sprops/rectangles/size_4/rect_36x48x3.mdl", E:toWorld(vec(-46.5, 110, 60)), ang(0, 25, 90))
    
    weld(EgpA, E)
    weld(EgpB, E)
    weld(EgpC, E)
    
    EgpA:setMaterial("models/shiny")
    EgpA:setColor(C2)
    EgpB:setMaterial("models/shiny")
    EgpB:setColor(C2)
    EgpC:setMaterial("models/shiny")
    EgpC:setColor(C2)
}

if(changed(holoEntity(17):pos():distance(O:pos()) < 200 & O:aimEntity() == holoEntity(17) & O:keyUse()) & holoEntity(17):pos():distance(O:pos()) < 200 & O:aimEntity() == holoEntity(17) & O:keyUse()){
    holoColor(17, vec(0, 255, 0))
    holoPos(17, E:toWorld(vec(-70 - 5, -139.8, 49 + 5)))
    E:soundPlay(1, 1, "tools/ifm/beep.wav")
    Door = !Door
}
else {
    holoColor(17, vec(0, 100, 0))
    holoPos(17, E:toWorld(vec(-70 - 5, -139, 49 + 5)))
}

if(changed(holoEntity(18):pos():distance(O:pos()) < 200 & O:aimEntity() == holoEntity(18) & O:keyUse()) & holoEntity(18):pos():distance(O:pos()) < 200 & O:aimEntity() == holoEntity(18) & O:keyUse()){
    holoColor(18, vec(0, 255, 0))
    holoPos(18, E:toWorld(vec(-70 - 5, -139.8, 49 - 5)))
    holoEntity(18):soundPlay(1, 1, "tools/ifm/beep.wav")
    Light = !Light
}
else {
    holoColor(18, vec(0, 100, 0))
    holoPos(18, E:toWorld(vec(-70 - 5, -139, 49 - 5)))
}

if(changed(holoEntity(19):pos():distance(O:pos()) < 200 & O:aimEntity() == holoEntity(19) & O:keyUse()) & holoEntity(19):pos():distance(O:pos()) < 200 & O:aimEntity() == holoEntity(19) & O:keyUse()){
    holoColor(19, vec(0, 255, 0))
    holoPos(19, E:toWorld(vec(-70 + 5, -139.8, 49 + 5)))
    holoEntity(19):soundPlay(1, 1, "tools/ifm/beep.wav")
    Zanoves = !Zanoves
}
else {
    holoColor(19, vec(0, 100, 0))
    holoPos(19, E:toWorld(vec(-70 + 5, -139, 49 + 5)))
}

if(changed(holoEntity(20):pos():distance(O:pos()) < 200 & O:aimEntity() == holoEntity(20) & O:keyUse()) & holoEntity(20):pos():distance(O:pos()) < 200 & O:aimEntity() == holoEntity(20) & O:keyUse()){
    holoColor(20, vec(0, 255, 0))
    holoPos(20, E:toWorld(vec(-70 + 5, -139.8, 49 - 5)))
    holoEntity(19):soundPlay(1, 1, "tools/ifm/beep.wav")
    
    C3 = vec(random(255), random(255), random(255))
    
    holoColor(10, C3)
    holoColor(11, C3)
    holoColor(12, C3)
    holoColor(13, C3)
    holoColor(14, C3)
    holoColor(31, C3)
    holoColor(33, C3)
    holoColor(35, C3)
    holoColor(37, C3)
    
}
else {
    holoColor(20, vec(0, 100, 0))
    holoPos(20, E:toWorld(vec(-70 + 5, -139, 49 - 5)))
}

if(Door){
    PosDoor1 = 10
    PosDoor = PosDoor + 3
    holoPos(15, E:toWorld(vec(PosDoor, -140.7 - PosDoor1, 49)))

    if(PosDoor >= 100){
        PosDoor = 100
    }
}

if(!Door){
    PosDoor = PosDoor - 5
    holoPos(15, E:toWorld(vec(PosDoor, -140.7 - PosDoor1, 49)))
    if(PosDoor <= 0){
        PosDoor = 0 PosDoor1 = 0 holoPos(15, E:toWorld(vec(0, -140.7, 49)))
    }
}

if(changed(Light) & Light){
    E:setdLight(E:toWorld(vec(0, 0, 90)), C3, 5, 300, 0) holoDisableShading(31, 1)
}

if(changed(!Light) & !Light){
    E:setdLight(E:toWorld(vec(0, 0, 90)), vec(255, 255, 255), 0, 300, 0) holoDisableShading(31, 0)
}

if(Zanoves){
    for(I = 10, 14){
        holoAlpha(I, 200)
    }
}

if(!Zanoves){
    for(I = 10, 14){
        holoAlpha(I, 255)
    }
}
